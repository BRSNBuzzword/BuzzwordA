Benutzer sollen mit dem Spiel eine Bingokarte in der Shell generieren können.
• Die Anzahl der Felder in der Breite und Höhe der zu generierenden Bingokarte gibt
der Benutzer per Kommandozeilenargument an. Also z.B. -xaxis 5 -yaxis 5
• Eine Export-Funktionalität (via Kommandozeilenargument!) ist nötig, um mehrere
(verschiedene!) Bingokarten zu erzeugen, um diese ausdrucken zu können.
• Die Werte der Felder auf der Bingokarte sollen aus einer Textdatei eingelesen und per
Zufall verteilt werden. Die Textdatei kann auch gerne mehr Wörter enthalten und
es werden entsprechend so viele Wörter zufällig vom Buzzword-Bingo-Spiel aus der
Datei importiert und auf der bzw. den Bingokarte(n) verteilt, wie es die definierte
Höhe und Breite vorgibt.
• Mit der Tastatur (und evtl. auch mit der Maus) wählt der Benutzer im EinzelspielerModus einzelne Felder aus, um diese zu streichen (bzw. zu markieren).
• Hat der Benutzer eine komplette Spalte, Zeile oder Diagonale der Bingokarte an
Feldern gestrichen bzw. markiert, gilt das Spiel als gewonnen, was entsprechend
angezeigt wird. Das kann beispielsweise durch eine Laufschrift geschehen, durch ein
Blinken oder durch ein Invertieren der Farben in der Shell, etc.
• Entwickeln und implementieren Sie Ihre Lösung als Bash-Skript, als CProgramm oder als Python-Skript als freie Software (Open Source) und verwenden Sie hierfür ein Code-Repository, z.B. bei GitHub.
• Für die „grafische Darstellung“ in der Shell verwenden Sie eine Bibliothek wie ncurses1 2 (für C-Programme), Termbox3
(für C-Programme oder Python-Scripte), dialog4 5 6 (für Shell-Scripte) oder Whiptail7 8 9 (für Shell-Scripte).
• Es soll möglich sein, das Spiel nur aus einer Shell heraus zu spielen. Es soll komplett
in der Shell ablaufen!
• Bei 5x5 oder 7x7 Feldern bleibt das Feld in der Mitte üblicherweise frei (Joker).
• Der Quellcode soll durch Kommentare verständlich sein.
• Bearbeiten Sie die Aufgabe in Teams zu 3 Personen.
• Schreiben Sie eine aussagekräftige und ansehnliche Dokumentation (Umfang: 8-10
Seiten) über Ihre Lösung.
Die Funktionalität der Lösung müssen Sie in der Übung demonstrieren. Bereiten Sie
einen Vortrag mit Präsentationsfolien und eine Live-Demonstration (Umfang: 15-20
Minuten) vor.
